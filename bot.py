from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from config import TOKEN
from sleep.reminders import set_sleep_reminder
from sleep.advice import get_sleep_advice
from workout.generator import generate_workout
from keyboards import main_menu_keyboard, workout_levels_keyboard
from database import init_db
import asyncio
import logging

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî HabitQuest, —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ó–û–ñ. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_keyboard()
    )

@dp.message(Command("sleep"))
async def handle_sleep_command(message: Message):
    await handle_sleep(message)

@dp.message(Command("train"))
async def handle_train_command(message: Message):
    await handle_train(message)

@dp.message(F.text == "üõå –°–æ–Ω")
async def handle_sleep(message: Message):
    await message.answer("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ —Å–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –ñ–µ–ª–∞—é —Å–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤ üò¥")
    await set_sleep_reminder(message)

@dp.message(F.text == "üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞")
async def handle_train(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:",
        reply_markup=workout_levels_keyboard()
    )

@dp.message(F.text == "‚ÑπÔ∏è –°–æ–≤–µ—Ç")
async def handle_advice(message: Message):
    advice = get_sleep_advice()
    await message.answer(f"–°–æ–≤–µ—Ç –ø–æ —Å–Ω—É: {advice}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline-–∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
@dp.callback_query(F.data.startswith("level_"))
async def handle_level_callback(callback: CallbackQuery):
    level_mapping = {
        "level_easy": "–ª—ë–≥–∫–∞—è",
        "level_medium": "—Å—Ä–µ–¥–Ω—è—è",
        "level_hard": "—Ç—è–∂—ë–ª–∞—è"
    }
    selected_level = level_mapping.get(callback.data)
    workout = generate_workout(level=selected_level)
    await callback.message.answer(f"–¢–≤–æ—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ({selected_level.title()}):\n{workout}")
    await callback.answer()  # –ó–∞–∫—Ä—ã—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ

async def main():
    init_db()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())